<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.platform.dao.ActivityGoodsMapper">

    <resultMap type="com.platform.entity.ActivityGoodsEntity" id="BaseResultMap">
        <result property="id" column="id"/>
        <result property="activityId" column="activity_id"/>
        <result property="productId" column="product_id"/>
        <result property="activityPrice" column="activity_price"/>
    </resultMap>
    
    <resultMap type="com.platform.entity.ActivityGoodsEntity" id="activityGoodsMap">
        <result property="id" column="id"/>
        <result property="activityId" column="activity_id"/>
        <result property="productId" column="product_id"/>
        <result property="activityPrice" column="activity_price"/>
         <result property="price" column="price"/>
          <result property="picUrl" column="primary_pic_url"/>
        <result property="goodsName" column="name"/>
         <result property="goodsSpecificationIds" column="goods_specification_ids"/>
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List" >
	    `id`,
	    `activity_id`,
	    `product_id`,
	    `activity_price`
  	</sql>
	<select id="selectActivityGoods" resultMap="activityGoodsMap"  >
		select ag.id ,g.name as name,g.primary_pic_url ,ag.activity_price as activity_price ,p.retail_price 
		as price,p.goods_specification_ids,p.id as product_id from nideshop_goods g,
		nideshop_product p, nideshop_activity_goods ag
		where ag.activity_id=#{activityId}
		and ag.product_id=p.id
		and p.goods_id=g.id
		and g.is_on_sale=1 and g.is_delete=0
	</select>

	<select id="selectAllActivityGoods" resultMap="activityGoodsMap"  >
		select null as id ,g.name as name,g.primary_pic_url ,p.retail_price as activity_price ,p.retail_price 
			as price,p.goods_specification_ids,p.id as product_id from nideshop_goods g,
			nideshop_product p
		where
		 p.goods_id=g.id
		and g.is_on_sale=1 and g.is_delete=0
	</select>


    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.platform.entity.example.ActivityGoodsExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from nideshop_activity_goods
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
        <if test="pageStart!=null and pageStart gt -1" >
            limit ${pageStart},${pageSize}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select
        <include refid="Base_Column_List" />
        from nideshop_activity_goods
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        delete from nideshop_activity_goods
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.platform.entity.example.ActivityGoodsExample" >
        delete from nideshop_activity_goods
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <delete id="deleteBatch">
        delete from nideshop_activity_goods where id in
<foreach item="id" collection="array" open="(" separator="," close=")">
          #{id}
</foreach>
    </delete>
    <insert id="insert" parameterType="com.platform.entity.ActivityGoodsEntity">
		insert into nideshop_activity_goods(
          `id`,
          `activity_id`,
          `product_id`,
          `activity_price`        )
		values(
          #{id},
          #{activityId},
          #{productId},
          #{activityPrice}         )
	</insert>


    <insert id="insertSelective" parameterType="com.platform.entity.ActivityGoodsEntity">
        insert into nideshop_activity_goods
        <trim prefix="(" suffix=")" suffixOverrides="," >
          <if test="id != null">
            `id`,
          </if>
          <if test="activityId != null">
            `activity_id`,
          </if>
          <if test="productId != null">
            `product_id`,
          </if>
          <if test="activityPrice != null">
            `activity_price`
          </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null">
              #{id},
            </if>
            <if test="activityId != null">
              #{activityId},
            </if>
            <if test="productId != null">
              #{productId},
            </if>
            <if test="activityPrice != null">
              #{activityPrice}
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="com.platform.entity.example.ActivityGoodsExample" resultType="java.lang.Integer" >
        select count(*) from nideshop_activity_goods
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map" >
        update nideshop_activity_goods
        <set>
          <if test="activityId != null">
              `activity_id` = #{activityId},
          </if>
          <if test="productId != null">
              `product_id` = #{productId},
          </if>
          <if test="activityPrice != null">
              `activity_price` = #{activityPrice}
          </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map" >
        update nideshop_activity_goods
        <set>
          `activity_id` = #{activityId},
          `product_id` = #{productId},
          `activity_price` = #{activityPrice}
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.platform.entity.ActivityGoodsEntity">
        update nideshop_activity_goods
        <set>
          <if test="activityId != null">
            `activity_id` = #{activityId},
          </if>
          <if test="productId != null">
            `product_id` = #{productId},
          </if>
          <if test="price != null">
            `activity_price` = #{activityPrice}
          </if>
        </set>
        where id = #{id}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.platform.entity.ActivityGoodsEntity" >
        update nideshop_activity_goods
        <set>
            `activity_id` = #{activityId},
            `product_id` = #{productId},
            `activity_price` = #{activityPrice}
        </set>
        where id = #{id,jdbcType=BIGINT}
  </update>


    <select id="queryList" resultType="com.platform.entity.ActivityGoodsEntity">
        select
          `id`,
          `activity_id`,
          `product_id`,
          `activity_price`
        from nideshop_activity_goods
        WHERE 1=1
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
         <if test="activity_id != null and activity_id.trim() != ''">
            AND activity_id =#{name}
        </if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

 
    
    <select id="queryTotal" resultType="int">
        select count(*) from nideshop_activity_goods
        WHERE 1=1
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
    </select>
</mapper>